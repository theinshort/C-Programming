/* We will convert decimal numbers with doubleing points to binary */ #include <stdio.h> long dec_to_bin(long n){    long bin = 0;    long dec = n;    long i = 1;     while (dec > 0)    {        bin += (dec % 2) * i;        dec /= 2;        i *= 10;    }     return bin;} // fractBin multiplies iteratively for the fractional part of the number.double fractBin(double n){    double bin = 0;    int threshold = 6;    double temp = n;    double j = 0.1f;     for (int i = 0; i < threshold && temp > 0; i++)    {        temp *= 2;        int temp_int = (int)temp;        bin += (double)temp_int * j;        temp -= (double)temp_int;        j /= 10;    }     return bin;} double toBinary(double n){    // Send the part after decimal point to dec_to_bin function.    long num_int = (long)n;    double bina = (double) dec_to_bin(num_int);     double num_dec = n - (double) num_int;    double binb = fractBin(num_dec);    return bina + binb;} int main(void){    double n;    printf("Enter a decimal number: ");    scanf("%lf", &n);    printf("Binary equivalent of %lf = %lf\n", n, toBinary(n));    return 0;}